{{- $version := "4.7.0" }}

{{- $_ := set . "BASE_GOLANG" "registry.deckhouse.io/base_images/golang:1.23.4-bullseye@sha256:9b3176d53704a9b1be19d307b660733cc691af02906d7e918dbe4d11427a422c" }}
{{- $_ := set . "BASE_SCRATCH"    "registry.deckhouse.io/base_images/scratch@sha256:653ae76965c98c8cd1c8c9ff7725316d2983986f896655b30e0f44d2f8b2dd7e" }}
{{- $_ := set . "BASE_ALT"    "registry.deckhouse.io/base_images/alt:p11@sha256:e47d84424485d3674240cb2f67d3a1801b37d327e6d1eb8cc8d01be8ed3b34f3" }}

---
image: {{ $.ImageName }}-golang-artifact
from: {{ $.BASE_GOLANG }}
final: false

git:
  - add: /images/{{ $.ImageName }}
    to: /
    stageDependencies:
      install:
        - "**/*"
    includePaths:
    - patches

mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  install:
    - export GO_VERSION={{ env "GOLANG_VERSION" }}
    - export GOPROXY={{ env "GOPROXY" }}
    - git clone --depth 1 --branch v{{ $version }} {{ env "SOURCE_REPO" }}/kubernetes-csi/csi-driver-nfs.git /csi-driver-nfs
    - cd /csi-driver-nfs
    - for patchfile in /patches/*.patch ; do echo -n "Apply ${patchfile} ... "; git apply ${patchfile}; done
    - go mod vendor
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /nfsplugin ./cmd/nfsplugin
    - chmod +x /nfsplugin
---
image: {{ $.ImageName }}-src-artifact
from: {{ $.BASE_ALT }}
final: false

git:
  - add: /images/{{ $.ImageName }}
    to: /
    stageDependencies:
      install:
        - "**/*"
    includePaths:
      - patches

shell:
  install:
    - git clone --depth 1 --branch v{{ $version }} {{ env "SOURCE_REPO" }}/kubernetes-csi/csi-driver-nfs.git /src/csi-driver-nfs
    - cd /src/csi-driver-nfs
    - for patchfile in /patches/*.patch ; do echo -n "Apply ${patchfile} ... "; git apply ${patchfile}; done
    - rm -rf /src/csi-driver-nfs/.git
---
{{ $csiBinaries := "/bin/mount /bin/umount /sbin/mount.nfs /sbin/mount.nfs4 /sbin/umount.nfs /sbin/umount.nfs4 /bin/cp" }}
---
image: {{ $.ImageName }}-binaries-artifact
from: {{ $.BASE_ALT }}
final: false

shell:
  install:
    - /binary_replace.sh -i "{{ $csiBinaries }}" -o /relocate

---
image: {{ $.ImageName }}-distroless-artifact
from: {{ $.BASE_ALT }}
final: false

shell:
  install:
    - mkdir -p /relocate/bin /relocate/sbin /relocate/etc /relocate/var/lib/ssl /relocate/usr/bin /relocate/usr/sbin /relocate/usr/share
    - cp -pr /tmp /relocate
    - cp -pr /etc/passwd /etc/group /etc/hostname /etc/hosts /etc/shadow /etc/protocols /etc/services /etc/nsswitch.conf /etc/netconfig /relocate/etc
    - cp -pr /usr/share/ca-certificates /relocate/usr/share
    - cp -pr /usr/share/zoneinfo /relocate/usr/share
    - cp -pr /var/lib/ssl/cert.pem /relocate/var/lib/ssl
    - cp -pr /var/lib/ssl/certs /relocate/var/lib/ssl
    - echo "deckhouse:x:64535:64535:deckhouse:/:/sbin/nologin" >> /relocate/etc/passwd
    - echo "deckhouse:x:64535:" >> /relocate/etc/group
    - echo "deckhouse:!::0:::::" >> /relocate/etc/shadow

---
image: {{ $.ImageName }}-distroless
from: {{ $.BASE_SCRATCH }}
final: false

import:
  - image: {{ $.ImageName }}-distroless-artifact
    add: /relocate
    to: /
    before: setup

---
image: {{ $.ImageName }}
fromImage: {{ $.ImageName }}-distroless

import:
  - image: {{ $.ImageName }}-golang-artifact
    add: /nfsplugin
    to: /nfsplugin
    before: setup
  - image: {{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: install
    includePaths:
      - '**/*'
  - image: {{ $.ImageName }}-binaries-artifact
    add: /lib64
    to: /lib64
    before: install
    includePaths:
      - 'libresolv*'
      - 'libnss_dns*'
      - 'libnss_files*'
docker:
  ENTRYPOINT: ["/nfsplugin"]
