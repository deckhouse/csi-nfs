---
# do not remove this image: used in external audits (DKP CSE)
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
fromImage: builder/src
final: false
git:
  - url: {{ env "SOURCE_REPO" }}/oracle/ktls-utils.git
    add: /
    to: /src/ktls-utils
    tag: {{ $.Versions.KTLS_UTILS }}
    stageDependencies:
      install:
        - '**/*'
  - add: /
    to: /src
    includePaths:
      - api
      - lib/go
      - images/{{ $.ImageName }}
    stageDependencies:
      install:
        - '**/*'
shell:
  install:
    - rm -rf /src/.git
    - rm -rf /src/ktls-utils/.git

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-binaries-artifact
fromImage: builder/alt
final: false

import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install

git:
  - add: {{ .ModuleDir }}/tools/dev_images/additional_tools/binary_replace.sh
    to: /binary_replace.sh
    stageDependencies:
      beforeSetup:
        - '**/*'

shell:
  beforeInstall:
    - apt-get update
    - apt-get install -y {{ .DEV_PACKAGES }}
    - apt-get install -y libgnutls-devel libkeyutils-devel glib2-devel libnl-devel
    - {{ .ALT_CLEANUP_CMD }}
  install:
    - cd /src/ktls-utils
    - ./autogen.sh
    - ./configure
    - make
  beforeSetup:
    - mkdir -p /opt/deckhouse/csi/bin
    - cp -v /src/ktls-utils/src/tlshd/tlshd /opt/deckhouse/csi/bin/tlshd
    - /binary_replace.sh -i "/opt/deckhouse/csi/bin/tlshd" -o /relocate
    - mkdir -p /relocate/opt/deckhouse/csi/etc
    - cp -v /src/ktls-utils/src/tlshd/tlshd.conf /relocate/opt/deckhouse/csi/etc/tlshd.conf

---
image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
fromImage: builder/golang-alpine
final: false

import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-src-artifact
    add: /src
    to: /src
    before: install

mount:
{{ include "mount points for golang builds" . }}

secrets:
- id: GOPROXY
  value: {{ .GOPROXY }}

shell:
  setup:
    - cd /src/images/{{ $.ImageName }}/cmd
    - GOPROXY=$(cat /run/secrets/GOPROXY) go mod download
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o /{{ $.ImageName }}
    - chmod +x /{{ $.ImageName }}

---
image: {{ $.ImageName }}
fromImage: base/distroless

import:
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup
  - image: {{ .ModuleNamePrefix }}{{ .ImageName }}-golang-artifact
    add: /{{ $.ImageName }}
    to: /{{ $.ImageName }}
    before: setup

imageSpec:
  config:
    entrypoint: ["/{{ $.ImageName }}"]
