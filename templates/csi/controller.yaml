###
### common
###

{{- $csiControllerImage := include "helm_lib_module_image" (list . "csiNfs") }}


{{- define "csi_init_containers" }}
{{- if .Values.csiNfs.v3support }}
- name: wait-rpcbind
  image: {{ include "helm_lib_module_image" (list . "waitRpcbind") }}
  command: ["/wait-rpcbind"]
  imagePullPolicy: IfNotPresent
  volumeMounts:
    - name: host-run
      mountPath: /run
{{- end }}

{{- if .Values.csiNfs.tlsParameters.ca }}
- name: ktls-enabler
  image: {{ include "helm_lib_module_image" (list . "kmod") }}
  command: ["/opt/deckhouse/csi/bin/modprobe", "tls"]
  imagePullPolicy: IfNotPresent
  securityContext:
    privileged: true
  volumeMounts:
    - name: host-sys
      mountPath: /sys
    - name: host-lib-modules
      mountPath: /lib/modules
- name: net-hendshake-checker
  image: {{ include "helm_lib_module_image" (list . "tlshd") }}
  command: ["/go-tlshd", "--mode=init-containers"]
  imagePullPolicy: IfNotPresent
  securityContext:
    privileged: true
{{- end }}
{{- end }}

{{- define "csi_init_containers_volume" }}
{{- if .Values.csiNfs.v3support }}
- name: host-run
  hostPath:
    path: /run
    type: Directory
{{- end }}

{{- if .Values.csiNfs.tlsParameters.ca }}
- name: host-sys
  hostPath:
    path: /sys
    type: Directory
- name: host-lib-modules
  hostPath:
    path: /lib/modules
    type: Directory
{{- end }}
{{- end }}


{{- define "csi_tlshd_container" }}
{{- if .Values.csiNfs.tlsParameters.ca }}
- name: tlshd
  image: {{ include "helm_lib_module_image" (list . "tlshd") }}
  command: ["/go-tlshd", "--mode=containers"]
  imagePullPolicy: IfNotPresent
  securityContext:
    privileged: true
  volumeMounts:
    - name: cm-tlshd-conf
      mountPath: /etc/tlshd.conf
      subPath: tlshd.conf
      readOnly: true
    - name: cm-tlshd-conf
      mountPath: /etc/ca.crt
      subPath: ca.crt
      readOnly: true

    {{- if .Values.csiNfs.tlsParameters.mtls }}
    - name: cm-tlshd-conf
      mountPath: /etc/client.crt
      subPath: client.crt
      readOnly: true
    - name: cm-tlshd-conf
      mountPath: /etc/client.key
      subPath: client.key
      readOnly: true
    {{- end }}

{{- end }}
{{- end }}

{{- define "csi_tlshd_container_volume" }}
{{- if .Values.csiNfs.tlsParameters.ca }}
- name: cm-tlshd-conf
  configMap:
    name: tlshd-conf
    defaultMode: 384
{{- end }}
{{- end }}


{{- define "nfsv3_container_volume" }}
{{- if .Values.csiNfs.v3support }}
- name: run-rpcbind-sock
  hostPath:
    path: /run/rpcbind.sock
{{- end }}
{{- end }}

{{- define "nfsv3_container_volume_mounts" }}
{{- if .Values.csiNfs.v3support }}
- name: run-rpcbind-sock
  mountPath: /run/rpcbind.sock
{{- end }}
{{- end }}


###
### controller
###


{{- define "csi_controller_args" }}
- "--v=5"
- "--nodeid=$(NODE_ID)"
- "--endpoint=$(CSI_ENDPOINT)"
- "--drivername=nfs.csi.k8s.io"
- "--mount-permissions=0"
- "--working-mount-dir=/tmp"
- "--default-ondelete-policy=delete"
{{- end }}

{{- define "csi_controller_envs" }}
- name: NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: CSI_ENDPOINT
  value: unix:///csi/csi.sock
{{- include "helm_lib_envs_for_proxy" . }}
{{- end }}

{{- define "csi_additional_controller_volume" }}
- name: pods-mount-dir
  hostPath:
    path: /var/lib/kubelet/pods
    type: Directory
- name: tmp-dir
  emptyDir: {}

{{- include "csi_init_containers_volume" . }}
{{- include "nfsv3_container_volume" . }}
{{- end }}

{{- define "csi_additional_controller_volume_mounts" }}
- name: pods-mount-dir
  mountPath: /var/lib/kubelet/pods
  mountPropagation: "Bidirectional"
- mountPath: /tmp
  name: tmp-dir

{{- include "nfsv3_container_volume_mounts" . }}
{{- end }}

{{/*- define "csi_additional_controller_containers" }}
{{- end */}}

{{- $csiControllerConfig := dict }}
{{- $_ := set $csiControllerConfig "controllerImage" $csiControllerImage }}
{{- $_ := set $csiControllerConfig "snapshotterEnabled" true }}
{{- $_ := set $csiControllerConfig "resizerEnabled" true }}
{{- $_ := set $csiControllerConfig "runAsRootUser" true }}
{{- $_ := set $csiControllerConfig "provisionerTimeout" "1200s" }}
{{- $_ := set $csiControllerConfig "snapshotterTimeout" "1200s" }}
{{- $_ := set $csiControllerConfig "extraCreateMetadataEnabled" true }}
{{- $_ := set $csiControllerConfig "livenessProbePort" 4229 }}
{{- $_ := set $csiControllerConfig "additionalControllerArgs" (include "csi_controller_args" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerEnvs" (include "csi_controller_envs" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumes" (include "csi_additional_controller_volume" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumeMounts" (include "csi_additional_controller_volume_mounts" . | fromYamlArray) }}
{{/*- $_ := set $csiControllerConfig "additionalContainers" (include "csi_additional_controller_containers" . | fromYamlArray) */}}
{{- $_ := set $csiControllerConfig "initContainers" (include "csi_init_containers" . | fromYamlArray) }}

{{- include "helm_lib_csi_controller_manifests" (list . $csiControllerConfig) }}


###
### node
###


{{- define "csi_node_args" }}
- "--v=5"
- "--nodeid=$(NODE_ID)"
- "--endpoint=$(CSI_ENDPOINT)"
- "--drivername=nfs.csi.k8s.io"
- "--mount-permissions=0"
{{- end }}

{{- define "csi_node_envs" }}
- name: NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: CSI_ENDPOINT
  value: unix:///csi/csi.sock
{{- end }}

{{- define "csi_additional_node_volume" }}
{{- include "csi_init_containers_volume" . }}
{{- include "csi_tlshd_container_volume" . }}
{{- include "nfsv3_container_volume" . }}
{{- end }}

{{- define "csi_additional_node_volume_mounts" }}
{{- include "nfsv3_container_volume_mounts" . }}
{{- end }}

{{- define "csi_additional_node_containers" }}
{{- include "csi_tlshd_container" . }}
{{- end }}

{{- $csiNodeConfig := dict }}
{{- $_ := set $csiNodeConfig "fullname" "csi-nfs" }}
{{- $_ := set $csiNodeConfig "nodeImage" $csiControllerImage }}
{{- $_ := set $csiNodeConfig "driverFQDN" "nfs.csi.k8s.io" }}
{{- $_ := set $csiNodeConfig "livenessProbePort" 4230 }}
{{- $_ := set $csiNodeConfig "additionalNodeArgs" (include "csi_node_args" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeEnvs" (include "csi_node_envs" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeVolumes" (include "csi_additional_node_volume" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeVolumeMounts" (include "csi_additional_node_volume_mounts" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalContainers" (include "csi_additional_node_containers" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "initContainers" (include "csi_init_containers" . | fromYamlArray) }}

{{- include "helm_lib_csi_node_manifests" (list . $csiNodeConfig) }}
